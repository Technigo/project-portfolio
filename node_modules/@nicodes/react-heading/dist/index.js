var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import React, { useRef, useState, useEffect, useCallback } from 'react';
/** Smart Headings for React */
export default (function (_a) {
    var _b = _a.min, min = _b === void 0 ? 1 : _b, _c = _a.max, max = _c === void 0 ? 6 : _c, children = _a.children, props = __rest(_a, ["min", "max", "children"]);
    if (max < min)
        console.error('`react-heading` invalid props: must meet requirement `min` <= `max`');
    var ref = useRef(null);
    var _d = useState("h".concat(min)), E = _d[0], setE = _d[1];
    /** Returns heading degree by searching for the number of `<h1>, ..., <h6>` elements in the DOM above by recursing through all parents and grandparent's children "uncles" */
    var headingSearch = useCallback(function (parentElement, n) {
        var grandparentElement = parentElement === null || parentElement === void 0 ? void 0 : parentElement.parentElement;
        if (!grandparentElement || n === max)
            return n;
        for (var _i = 0, _a = Array(grandparentElement.children); _i < _a.length; _i++) {
            var e = _a[_i];
            if (e[0] instanceof HTMLHeadingElement)
                return headingSearch(grandparentElement, ++n);
        }
        return headingSearch(grandparentElement, n);
    }, [max]);
    useEffect(function () { var _a; return setE("h".concat(headingSearch((_a = ref.current) === null || _a === void 0 ? void 0 : _a.parentElement, min))); }, [min, max]);
    return React.createElement(E, __assign({ ref: ref }, props), children);
});
//# sourceMappingURL=index.js.map